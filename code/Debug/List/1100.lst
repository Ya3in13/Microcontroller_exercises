
AVRASM ver. 2.1.30  E:\mikro8.13\Debug\List\1100.asm Wed Jan 15 07:34:49 2025

E:\mikro8.13\Debug\List\1100.asm(1088): warning: Register r5 already defined by the .DEF directive
E:\mikro8.13\Debug\List\1100.asm(1089): warning: Register r4 already defined by the .DEF directive
E:\mikro8.13\Debug\List\1100.asm(1090): warning: Register r7 already defined by the .DEF directive
                 
                 
                 ;CodeVisionAVR C Compiler V3.14 Advanced
                 ;(C) Copyright 1998-2014 Pavel Haiduc, HP InfoTech s.r.l.
                 ;http://www.hpinfotech.com
                 
                 ;Build configuration    : Debug
                 ;Chip type              : ATmega16A
                 ;Program type           : Application
                 ;Clock frequency        : 1.000000 MHz
                 ;Memory model           : Small
                 ;Optimize for           : Size
                 ;(s)printf features     : int, width
                 ;(s)scanf features      : int, width
                 ;External RAM size      : 0
                 ;Data Stack size        : 256 byte(s)
                 ;Heap size              : 0 byte(s)
                 ;Promote 'char' to 'int': Yes
                 ;'char' is unsigned     : Yes
                 ;8 bit enums            : Yes
                 ;Global 'const' stored in FLASH: Yes
                 ;Enhanced function parameter passing: Yes
                 ;Enhanced core instructions: On
                 ;Automatic register allocation for global variables: On
                 ;Smart register allocation: On
                 
                 	#define _MODEL_SMALL_
                 
                 	#pragma AVRPART ADMIN PART_NAME ATmega16A
                 	#pragma AVRPART MEMORY PROG_FLASH 16384
                 	#pragma AVRPART MEMORY EEPROM 512
                 	#pragma AVRPART MEMORY INT_SRAM SIZE 1024
                 	#pragma AVRPART MEMORY INT_SRAM START_ADDR 0x60
                 
                 	#define CALL_SUPPORTED 1
                 
                 	.LISTMAC
                 	.EQU UDRE=0x5
                 	.EQU RXC=0x7
                 	.EQU USR=0xB
                 	.EQU UDR=0xC
                 	.EQU SPSR=0xE
                 	.EQU SPDR=0xF
                 	.EQU EERE=0x0
                 	.EQU EEWE=0x1
                 	.EQU EEMWE=0x2
                 	.EQU EECR=0x1C
                 	.EQU EEDR=0x1D
                 	.EQU EEARL=0x1E
                 	.EQU EEARH=0x1F
                 	.EQU WDTCR=0x21
                 	.EQU MCUCR=0x35
                 	.EQU GICR=0x3B
                 	.EQU SPL=0x3D
                 	.EQU SPH=0x3E
                 	.EQU SREG=0x3F
                 
                 	.DEF R0X0=R0
                 	.DEF R0X1=R1
                 	.DEF R0X2=R2
                 	.DEF R0X3=R3
                 	.DEF R0X4=R4
                 	.DEF R0X5=R5
                 	.DEF R0X6=R6
                 	.DEF R0X7=R7
                 	.DEF R0X8=R8
                 	.DEF R0X9=R9
                 	.DEF R0XA=R10
                 	.DEF R0XB=R11
                 	.DEF R0XC=R12
                 	.DEF R0XD=R13
                 	.DEF R0XE=R14
                 	.DEF R0XF=R15
                 	.DEF R0X10=R16
                 	.DEF R0X11=R17
                 	.DEF R0X12=R18
                 	.DEF R0X13=R19
                 	.DEF R0X14=R20
                 	.DEF R0X15=R21
                 	.DEF R0X16=R22
                 	.DEF R0X17=R23
                 	.DEF R0X18=R24
                 	.DEF R0X19=R25
                 	.DEF R0X1A=R26
                 	.DEF R0X1B=R27
                 	.DEF R0X1C=R28
                 	.DEF R0X1D=R29
                 	.DEF R0X1E=R30
                 	.DEF R0X1F=R31
                 
                 	.EQU __SRAM_START=0x0060
                 	.EQU __SRAM_END=0x045F
                 	.EQU __DSTACK_SIZE=0x0100
                 	.EQU __HEAP_SIZE=0x0000
                 	.EQU __CLEAR_SRAM_SIZE=__SRAM_END-__SRAM_START+1
                 
                 	.MACRO __CPD1N
                 	CPI  R30,LOW(@0)
                 	LDI  R26,HIGH(@0)
                 	CPC  R31,R26
                 	LDI  R26,BYTE3(@0)
                 	CPC  R22,R26
                 	LDI  R26,BYTE4(@0)
                 	CPC  R23,R26
                 	.ENDM
                 
                 	.MACRO __CPD2N
                 	CPI  R26,LOW(@0)
                 	LDI  R30,HIGH(@0)
                 	CPC  R27,R30
                 	LDI  R30,BYTE3(@0)
                 	CPC  R24,R30
                 	LDI  R30,BYTE4(@0)
                 	CPC  R25,R30
                 	.ENDM
                 
                 	.MACRO __CPWRR
                 	CP   R@0,R@2
                 	CPC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __CPWRN
                 	CPI  R@0,LOW(@2)
                 	LDI  R30,HIGH(@2)
                 	CPC  R@1,R30
                 	.ENDM
                 
                 	.MACRO __ADDB1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDB2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	SBCI R31,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	SBCI R27,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	SBCI R22,BYTE3(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1N
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	SBCI R22,BYTE3(-@0)
                 	SBCI R23,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __ADDD2N
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	SBCI R24,BYTE3(-@0)
                 	SBCI R25,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __SUBD1N
                 	SUBI R30,LOW(@0)
                 	SBCI R31,HIGH(@0)
                 	SBCI R22,BYTE3(@0)
                 	SBCI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __SUBD2N
                 	SUBI R26,LOW(@0)
                 	SBCI R27,HIGH(@0)
                 	SBCI R24,BYTE3(@0)
                 	SBCI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDBMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ANDWMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ANDI R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ANDD1N
                 	ANDI R30,LOW(@0)
                 	ANDI R31,HIGH(@0)
                 	ANDI R22,BYTE3(@0)
                 	ANDI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDD2N
                 	ANDI R26,LOW(@0)
                 	ANDI R27,HIGH(@0)
                 	ANDI R24,BYTE3(@0)
                 	ANDI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORBMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ORWMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ORI  R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ORD1N
                 	ORI  R30,LOW(@0)
                 	ORI  R31,HIGH(@0)
                 	ORI  R22,BYTE3(@0)
                 	ORI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORD2N
                 	ORI  R26,LOW(@0)
                 	ORI  R27,HIGH(@0)
                 	ORI  R24,BYTE3(@0)
                 	ORI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __DELAY_USB
                 	LDI  R24,LOW(@0)
                 __DELAY_USB_LOOP:
                 	DEC  R24
                 	BRNE __DELAY_USB_LOOP
                 	.ENDM
                 
                 	.MACRO __DELAY_USW
                 	LDI  R24,LOW(@0)
                 	LDI  R25,HIGH(@0)
                 __DELAY_USW_LOOP:
                 	SBIW R24,1
                 	BRNE __DELAY_USW_LOOP
                 	.ENDM
                 
                 	.MACRO __GETD1S
                 	LDD  R30,Y+@0
                 	LDD  R31,Y+@0+1
                 	LDD  R22,Y+@0+2
                 	LDD  R23,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __GETD2S
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	LDD  R24,Y+@0+2
                 	LDD  R25,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __PUTD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R31
                 	STD  Y+@0+2,R22
                 	STD  Y+@0+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTD2S
                 	STD  Y+@0,R26
                 	STD  Y+@0+1,R27
                 	STD  Y+@0+2,R24
                 	STD  Y+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __PUTDZ2
                 	STD  Z+@0,R26
                 	STD  Z+@0+1,R27
                 	STD  Z+@0+2,R24
                 	STD  Z+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __CLRD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R30
                 	STD  Y+@0+2,R30
                 	STD  Y+@0+3,R30
                 	.ENDM
                 
                 	.MACRO __POINTB1MN
                 	LDI  R30,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW1MN
                 	LDI  R30,LOW(@0+(@1))
                 	LDI  R31,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1M
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	LDI  R22,BYTE3(2*@0+(@1))
                 	LDI  R23,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTB2MN
                 	LDI  R26,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2MN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	LDI  R24,BYTE3(2*@0+(@1))
                 	LDI  R25,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTBRM
                 	LDI  R@0,LOW(@1)
                 	.ENDM
                 
                 	.MACRO __POINTWRM
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __POINTBRMN
                 	LDI  R@0,LOW(@1+(@2))
                 	.ENDM
                 
                 	.MACRO __POINTWRMN
                 	LDI  R@0,LOW(@2+(@3))
                 	LDI  R@1,HIGH(@2+(@3))
                 	.ENDM
                 
                 	.MACRO __POINTWRFN
                 	LDI  R@0,LOW(@2*2+(@3))
                 	LDI  R@1,HIGH(@2*2+(@3))
                 	.ENDM
                 
                 	.MACRO __GETD1N
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETD2N
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETB1MN
                 	LDS  R30,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETB1HMN
                 	LDS  R31,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	LDS  R22,@0+(@1)+2
                 	LDS  R23,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __GETBRMN
                 	LDS  R@0,@1+(@2)
                 	.ENDM
                 
                 	.MACRO __GETWRMN
                 	LDS  R@0,@2+(@3)
                 	LDS  R@1,@2+(@3)+1
                 	.ENDM
                 
                 	.MACRO __GETWRZ
                 	LDD  R@0,Z+@2
                 	LDD  R@1,Z+@2+1
                 	.ENDM
                 
                 	.MACRO __GETD2Z
                 	LDD  R26,Z+@0
                 	LDD  R27,Z+@0+1
                 	LDD  R24,Z+@0+2
                 	LDD  R25,Z+@0+3
                 	.ENDM
                 
                 	.MACRO __GETB2MN
                 	LDS  R26,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	LDS  R24,@0+(@1)+2
                 	LDS  R25,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __PUTB1MN
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __PUTW1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	STS  @0+(@1)+2,R22
                 	STS  @0+(@1)+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRB
                 	.ENDM
                 
                 	.MACRO __PUTW1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRW
                 	.ENDM
                 
                 	.MACRO __PUTD1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRD
                 	.ENDM
                 
                 	.MACRO __PUTBR0MN
                 	STS  @0+(@1),R0
                 	.ENDM
                 
                 	.MACRO __PUTBMRN
                 	STS  @0+(@1),R@2
                 	.ENDM
                 
                 	.MACRO __PUTWMRN
                 	STS  @0+(@1),R@2
                 	STS  @0+(@1)+1,R@3
                 	.ENDM
                 
                 	.MACRO __PUTBZR
                 	STD  Z+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWZR
                 	STD  Z+@2,R@0
                 	STD  Z+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __GETW1R
                 	MOV  R30,R@0
                 	MOV  R31,R@1
                 	.ENDM
                 
                 	.MACRO __GETW2R
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	.ENDM
                 
                 	.MACRO __GETWRN
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __PUTW1R
                 	MOV  R@0,R30
                 	MOV  R@1,R31
                 	.ENDM
                 
                 	.MACRO __PUTW2R
                 	MOV  R@0,R26
                 	MOV  R@1,R27
                 	.ENDM
                 
                 	.MACRO __ADDWRN
                 	SUBI R@0,LOW(-@2)
                 	SBCI R@1,HIGH(-@2)
                 	.ENDM
                 
                 	.MACRO __ADDWRR
                 	ADD  R@0,R@2
                 	ADC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __SUBWRN
                 	SUBI R@0,LOW(@2)
                 	SBCI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __SUBWRR
                 	SUB  R@0,R@2
                 	SBC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ANDWRN
                 	ANDI R@0,LOW(@2)
                 	ANDI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ANDWRR
                 	AND  R@0,R@2
                 	AND  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ORWRN
                 	ORI  R@0,LOW(@2)
                 	ORI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ORWRR
                 	OR   R@0,R@2
                 	OR   R@1,R@3
                 	.ENDM
                 
                 	.MACRO __EORWRR
                 	EOR  R@0,R@2
                 	EOR  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __GETWRS
                 	LDD  R@0,Y+@2
                 	LDD  R@1,Y+@2+1
                 	.ENDM
                 
                 	.MACRO __PUTBSR
                 	STD  Y+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSR
                 	STD  Y+@2,R@0
                 	STD  Y+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __MOVEWRR
                 	MOV  R@0,R@2
                 	MOV  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __INWR
                 	IN   R@0,@2
                 	IN   R@1,@2+1
                 	.ENDM
                 
                 	.MACRO __OUTWR
                 	OUT  @2+1,R@1
                 	OUT  @2,R@0
                 	.ENDM
                 
                 	.MACRO __CALL1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	CALL __GETW1PF
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EN
                 	PUSH R26
                 	PUSH R27
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMRDW
                 	POP  R27
                 	POP  R26
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EX
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	CALL __EEPROMRDD
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __GETW1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __NBST
                 	BST  R@0,@1
                 	IN   R30,SREG
                 	LDI  R31,0x40
                 	EOR  R30,R31
                 	OUT  SREG,R30
                 	.ENDM
                 
                 
                 	.MACRO __PUTB1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	CALL __PUTDP1
                 	.ENDM
                 
                 
                 	.MACRO __GETB1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R30,Z
                 	.ENDM
                 
                 	.MACRO __GETB1HSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	.ENDM
                 
                 	.MACRO __GETW1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z+
                 	LD   R23,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __GETB2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R26,X
                 	.ENDM
                 
                 	.MACRO __GETW2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	.ENDM
                 
                 	.MACRO __GETD2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R1,X+
                 	LD   R24,X+
                 	LD   R25,X
                 	MOVW R26,R0
                 	.ENDM
                 
                 	.MACRO __GETBRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	LD   R@0,Z
                 	.ENDM
                 
                 	.MACRO __GETWRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	LD   R@0,Z+
                 	LD   R@1,Z
                 	.ENDM
                 
                 	.MACRO __GETBRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	LD   R@0,X
                 	.ENDM
                 
                 	.MACRO __GETWRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	LD   R@0,X+
                 	LD   R@1,X
                 	.ENDM
                 
                 	.MACRO __LSLW8SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __PUTB1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __CLRW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __CLRD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTB2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z,R26
                 	.ENDM
                 
                 	.MACRO __PUTW2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z,R27
                 	.ENDM
                 
                 	.MACRO __PUTD2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z+,R27
                 	ST   Z+,R24
                 	ST   Z,R25
                 	.ENDM
                 
                 	.MACRO __PUTBSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	ST   Z,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	ST   Z+,R@0
                 	ST   Z,R@1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __MULBRR
                 	MULS R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRRU
                 	MUL  R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRR0
                 	MULS R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBRRU0
                 	MUL  R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBNWRU
                 	LDI  R26,@2
                 	MUL  R26,R@0
                 	MOVW R30,R0
                 	MUL  R26,R@1
                 	ADD  R31,R0
                 	.ENDM
                 
                 ;NAME DEFINITIONS FOR GLOBAL VARIABLES ALLOCATED TO REGISTERS
                 	.DEF __lcd_x=R5
                 	.DEF __lcd_y=R4
                 	.DEF __lcd_maxx=R7
                 
                 	.CSEG
                 	.ORG 0x00
                 
                 ;START OF CODE MARKER
                 __START_OF_CODE:
                 
                 ;INTERRUPT VECTORS
000000 940c 0068 	JMP  __RESET
000002 940c 0000 	JMP  0x00
000004 940c 0000 	JMP  0x00
000006 940c 0000 	JMP  0x00
000008 940c 0000 	JMP  0x00
00000a 940c 0000 	JMP  0x00
00000c 940c 0000 	JMP  0x00
00000e 940c 0000 	JMP  0x00
000010 940c 0000 	JMP  0x00
000012 940c 0000 	JMP  0x00
000014 940c 0000 	JMP  0x00
000016 940c 0000 	JMP  0x00
000018 940c 0000 	JMP  0x00
00001a 940c 0000 	JMP  0x00
00001c 940c 0000 	JMP  0x00
00001e 940c 0000 	JMP  0x00
000020 940c 0000 	JMP  0x00
000022 940c 0000 	JMP  0x00
000024 940c 0000 	JMP  0x00
000026 940c 0000 	JMP  0x00
000028 940c 0000 	JMP  0x00
                 
                 _tbl10_G101:
00002a 2710
00002b 03e8
00002c 0064
00002d 000a      	.DB  0x10,0x27,0xE8,0x3,0x64,0x0,0xA,0x0
00002e 0001      	.DB  0x1,0x0
                 _tbl16_G101:
00002f 1000
000030 0100
000031 0010
000032 0001      	.DB  0x0,0x10,0x0,0x1,0x10,0x0,0x1,0x0
                 
                 _0x0:
000033 4d20
000034 4c49
000035 4441
000036 0020      	.DB  0x20,0x4D,0x49,0x4C,0x41,0x44,0x20,0x0
000037 0033
000038 0032
000039 0031
00003a 0036      	.DB  0x33,0x0,0x32,0x0,0x31,0x0,0x36,0x0
00003b 0035
00003c 0034
00003d 0030
00003e 0023      	.DB  0x35,0x0,0x34,0x0,0x30,0x0,0x23,0x0
00003f 0039
000040 0038
000041 0037      	.DB  0x39,0x0,0x38,0x0,0x37,0x0
                 _0x2000003:
000042 c080      	.DB  0x80,0xC0
                 
                 __GLOBAL_INI_TBL:
000043 0002      	.DW  0x02
000044 0160      	.DW  _0xF
000045 006e      	.DW  _0x0*2+8
                 
000046 0002      	.DW  0x02
000047 0162      	.DW  _0xF+2
000048 0070      	.DW  _0x0*2+10
                 
000049 0002      	.DW  0x02
00004a 0164      	.DW  _0xF+4
00004b 0072      	.DW  _0x0*2+12
                 
00004c 0002      	.DW  0x02
00004d 0166      	.DW  _0xF+6
00004e 0074      	.DW  _0x0*2+14
                 
00004f 0002      	.DW  0x02
000050 0168      	.DW  _0xF+8
000051 0076      	.DW  _0x0*2+16
                 
000052 0002      	.DW  0x02
000053 016a      	.DW  _0xF+10
000054 0078      	.DW  _0x0*2+18
                 
000055 0002      	.DW  0x02
000056 016c      	.DW  _0xF+12
000057 007a      	.DW  _0x0*2+20
                 
000058 0002      	.DW  0x02
000059 016e      	.DW  _0xF+14
00005a 007c      	.DW  _0x0*2+22
                 
00005b 0002      	.DW  0x02
00005c 0170      	.DW  _0xF+16
00005d 007e      	.DW  _0x0*2+24
                 
00005e 0002      	.DW  0x02
00005f 0172      	.DW  _0xF+18
000060 0080      	.DW  _0x0*2+26
                 
000061 0002      	.DW  0x02
000062 0174      	.DW  _0xF+20
000063 0082      	.DW  _0x0*2+28
                 
000064 0002      	.DW  0x02
000065 0176      	.DW  __base_y_G100
000066 0084      	.DW  _0x2000003*2
                 
                 _0xFFFFFFFF:
000067 0000      	.DW  0
                 
                 #define __GLOBAL_INI_TBL_PRESENT 1
                 
                 __RESET:
000068 94f8      	CLI
000069 27ee      	CLR  R30
00006a bbec      	OUT  EECR,R30
                 
                 ;INTERRUPT VECTORS ARE PLACED
                 ;AT THE START OF FLASH
00006b e0f1      	LDI  R31,1
00006c bffb      	OUT  GICR,R31
00006d bfeb      	OUT  GICR,R30
00006e bfe5      	OUT  MCUCR,R30
                 
                 ;CLEAR R2-R14
00006f e08d      	LDI  R24,(14-2)+1
000070 e0a2      	LDI  R26,2
000071 27bb      	CLR  R27
                 __CLEAR_REG:
000072 93ed      	ST   X+,R30
000073 958a      	DEC  R24
000074 f7e9      	BRNE __CLEAR_REG
                 
                 ;CLEAR SRAM
000075 e080      	LDI  R24,LOW(__CLEAR_SRAM_SIZE)
000076 e094      	LDI  R25,HIGH(__CLEAR_SRAM_SIZE)
000077 e6a0      	LDI  R26,__SRAM_START
                 __CLEAR_SRAM:
000078 93ed      	ST   X+,R30
000079 9701      	SBIW R24,1
00007a f7e9      	BRNE __CLEAR_SRAM
                 
                 ;GLOBAL VARIABLES INITIALIZATION
00007b e8e6      	LDI  R30,LOW(__GLOBAL_INI_TBL*2)
00007c e0f0      	LDI  R31,HIGH(__GLOBAL_INI_TBL*2)
                 __GLOBAL_INI_NEXT:
00007d 9185      	LPM  R24,Z+
00007e 9195      	LPM  R25,Z+
00007f 9700      	SBIW R24,0
000080 f061      	BREQ __GLOBAL_INI_END
000081 91a5      	LPM  R26,Z+
000082 91b5      	LPM  R27,Z+
000083 9005      	LPM  R0,Z+
000084 9015      	LPM  R1,Z+
000085 01bf      	MOVW R22,R30
000086 01f0      	MOVW R30,R0
                 __GLOBAL_INI_LOOP:
000087 9005      	LPM  R0,Z+
000088 920d      	ST   X+,R0
000089 9701      	SBIW R24,1
00008a f7e1      	BRNE __GLOBAL_INI_LOOP
00008b 01fb      	MOVW R30,R22
00008c cff0      	RJMP __GLOBAL_INI_NEXT
                 __GLOBAL_INI_END:
                 
                 ;HARDWARE STACK POINTER INITIALIZATION
00008d e5ef      	LDI  R30,LOW(__SRAM_END-__HEAP_SIZE)
00008e bfed      	OUT  SPL,R30
00008f e0e4      	LDI  R30,HIGH(__SRAM_END-__HEAP_SIZE)
000090 bfee      	OUT  SPH,R30
                 
                 ;DATA STACK POINTER INITIALIZATION
000091 e6c0      	LDI  R28,LOW(__SRAM_START+__DSTACK_SIZE)
000092 e0d1      	LDI  R29,HIGH(__SRAM_START+__DSTACK_SIZE)
                 
000093 940c 0095 	JMP  _main
                 
                 	.ESEG
                 	.ORG 0
                 
                 	.DSEG
                 	.ORG 0x160
                 
                 	.CSEG
                 ;
                 ;#include <mega16a.h>
                 	#ifndef __SLEEP_DEFINED__
                 	#define __SLEEP_DEFINED__
                 	.EQU __se_bit=0x40
                 	.EQU __sm_mask=0xB0
                 	.EQU __sm_powerdown=0x20
                 	.EQU __sm_powersave=0x30
                 	.EQU __sm_standby=0xA0
                 	.EQU __sm_ext_standby=0xB0
                 	.EQU __sm_adc_noise_red=0x10
                 	.SET power_ctrl_reg=mcucr
                 	#endif
                 ;#include <alcd.h>
                 ;#include <stdio.h>
                 ;#include <delay.h>
                 ;
                 ;
                 ;void main(void)
                 ; 0000 0009 {
                 
                 	.CSEG
                 _main:
                 ; .FSTART _main
                 ; 0000 000A // Declare your local variables here
                 ; 0000 000B 
                 ; 0000 000C // Input/Output Ports initialization
                 ; 0000 000D // Port A initialization
                 ; 0000 000E // Function: Bit7=Out Bit6=Out Bit5=Out Bit4=Out Bit3=In Bit2=In Bit1=In Bit0=In
                 ; 0000 000F DDRA=(1<<DDA7) | (1<<DDA6) | (1<<DDA5) | (1<<DDA4) | (0<<DDA3) | (0<<DDA2) | (0<<DDA1) | (0<<DDA0);
000095 efe0      	LDI  R30,LOW(240)
000096 bbea      	OUT  0x1A,R30
                 ; 0000 0010 // State: Bit7=0 Bit6=0 Bit5=0 Bit4=0 Bit3=T Bit2=T Bit1=T Bit0=T
                 ; 0000 0011 PORTA=(0<<PORTA7) | (0<<PORTA6) | (0<<PORTA5) | (0<<PORTA4) | (0<<PORTA3) | (0<<PORTA2) | (0<<PORTA1) | (0<<PORTA0);
000097 e0e0      	LDI  R30,LOW(0)
000098 bbeb      	OUT  0x1B,R30
                 ; 0000 0012 
                 ; 0000 0013 // Port B initialization
                 ; 0000 0014 // Function: Bit7=In Bit6=In Bit5=In Bit4=In Bit3=In Bit2=In Bit1=In Bit0=In
                 ; 0000 0015 DDRB=(0<<DDB7) | (0<<DDB6) | (0<<DDB5) | (0<<DDB4) | (0<<DDB3) | (0<<DDB2) | (0<<DDB1) | (0<<DDB0);
000099 bbe7      	OUT  0x17,R30
                 ; 0000 0016 // State: Bit7=T Bit6=T Bit5=T Bit4=T Bit3=T Bit2=T Bit1=T Bit0=T
                 ; 0000 0017 PORTB=(0<<PORTB7) | (0<<PORTB6) | (0<<PORTB5) | (0<<PORTB4) | (0<<PORTB3) | (0<<PORTB2) | (0<<PORTB1) | (0<<PORTB0);
00009a bbe8      	OUT  0x18,R30
                 ; 0000 0018 
                 ; 0000 0019 // Port C initialization
                 ; 0000 001A // Function: Bit7=In Bit6=In Bit5=In Bit4=In Bit3=In Bit2=In Bit1=Out Bit0=In
                 ; 0000 001B DDRC=(0<<DDC7) | (0<<DDC6) | (0<<DDC5) | (0<<DDC4) | (0<<DDC3) | (0<<DDC2) | (1<<DDC1) | (0<<DDC0);
00009b e0e2      	LDI  R30,LOW(2)
00009c bbe4      	OUT  0x14,R30
                 ; 0000 001C // State: Bit7=T Bit6=T Bit5=T Bit4=T Bit3=T Bit2=T Bit1=1 Bit0=T
                 ; 0000 001D PORTC=(0<<PORTC7) | (0<<PORTC6) | (0<<PORTC5) | (0<<PORTC4) | (0<<PORTC3) | (0<<PORTC2) | (0<<PORTC1) | (0<<PORTC0);
00009d e0e0      	LDI  R30,LOW(0)
00009e bbe5      	OUT  0x15,R30
                 ; 0000 001E 
                 ; 0000 001F // Port D initialization
                 ; 0000 0020 // Function: Bit7=In Bit6=In Bit5=In Bit4=In Bit3=In Bit2=In Bit1=In Bit0=In
                 ; 0000 0021 DDRD=(0<<DDD7) | (0<<DDD6) | (0<<DDD5) | (0<<DDD4) | (0<<DDD3) | (0<<DDD2) | (0<<DDD1) | (0<<DDD0);
00009f bbe1      	OUT  0x11,R30
                 ; 0000 0022 // State: Bit7=T Bit6=T Bit5=T Bit4=T Bit3=T Bit2=T Bit1=T Bit0=T
                 ; 0000 0023 PORTD=(0<<PORTD7) | (0<<PORTD6) | (0<<PORTD5) | (0<<PORTD4) | (0<<PORTD3) | (0<<PORTD2) | (0<<PORTD1) | (0<<PORTD0);
0000a0 bbe2      	OUT  0x12,R30
                 ; 0000 0024 
                 ; 0000 0025 // Timer/Counter 0 initialization
                 ; 0000 0026 // Clock source: System Clock
                 ; 0000 0027 // Clock value: Timer 0 Stopped
                 ; 0000 0028 // Mode: Normal top=0xFF
                 ; 0000 0029 // OC0 output: Disconnected
                 ; 0000 002A TCCR0=(0<<WGM00) | (0<<COM01) | (0<<COM00) | (0<<WGM01) | (0<<CS02) | (0<<CS01) | (0<<CS00);
0000a1 bfe3      	OUT  0x33,R30
                 ; 0000 002B TCNT0=0x00;
0000a2 bfe2      	OUT  0x32,R30
                 ; 0000 002C OCR0=0x00;
0000a3 bfec      	OUT  0x3C,R30
                 ; 0000 002D 
                 ; 0000 002E // Timer/Counter 1 initialization
                 ; 0000 002F // Clock source: System Clock
                 ; 0000 0030 // Clock value: Timer1 Stopped
                 ; 0000 0031 // Mode: Normal top=0xFFFF
                 ; 0000 0032 // OC1A output: Disconnected
                 ; 0000 0033 // OC1B output: Disconnected
                 ; 0000 0034 // Noise Canceler: Off
                 ; 0000 0035 // Input Capture on Falling Edge
                 ; 0000 0036 // Timer1 Overflow Interrupt: Off
                 ; 0000 0037 // Input Capture Interrupt: Off
                 ; 0000 0038 // Compare A Match Interrupt: Off
                 ; 0000 0039 // Compare B Match Interrupt: Off
                 ; 0000 003A TCCR1A=(0<<COM1A1) | (0<<COM1A0) | (0<<COM1B1) | (0<<COM1B0) | (0<<WGM11) | (0<<WGM10);
0000a4 bdef      	OUT  0x2F,R30
                 ; 0000 003B TCCR1B=(0<<ICNC1) | (0<<ICES1) | (0<<WGM13) | (0<<WGM12) | (0<<CS12) | (0<<CS11) | (0<<CS10);
0000a5 bdee      	OUT  0x2E,R30
                 ; 0000 003C TCNT1H=0x00;
0000a6 bded      	OUT  0x2D,R30
                 ; 0000 003D TCNT1L=0x00;
0000a7 bdec      	OUT  0x2C,R30
                 ; 0000 003E ICR1H=0x00;
0000a8 bde7      	OUT  0x27,R30
                 ; 0000 003F ICR1L=0x00;
0000a9 bde6      	OUT  0x26,R30
                 ; 0000 0040 OCR1AH=0x00;
0000aa bdeb      	OUT  0x2B,R30
                 ; 0000 0041 OCR1AL=0x00;
0000ab bdea      	OUT  0x2A,R30
                 ; 0000 0042 OCR1BH=0x00;
0000ac bde9      	OUT  0x29,R30
                 ; 0000 0043 OCR1BL=0x00;
0000ad bde8      	OUT  0x28,R30
                 ; 0000 0044 
                 ; 0000 0045 // Timer/Counter 2 initialization
                 ; 0000 0046 // Clock source: System Clock
                 ; 0000 0047 // Clock value: Timer2 Stopped
                 ; 0000 0048 // Mode: Normal top=0xFF
                 ; 0000 0049 // OC2 output: Disconnected
                 ; 0000 004A ASSR=0<<AS2;
0000ae bde2      	OUT  0x22,R30
                 ; 0000 004B TCCR2=(0<<PWM2) | (0<<COM21) | (0<<COM20) | (0<<CTC2) | (0<<CS22) | (0<<CS21) | (0<<CS20);
0000af bde5      	OUT  0x25,R30
                 ; 0000 004C TCNT2=0x00;
0000b0 bde4      	OUT  0x24,R30
                 ; 0000 004D OCR2=0x00;
0000b1 bde3      	OUT  0x23,R30
                 ; 0000 004E 
                 ; 0000 004F // Timer(s)/Counter(s) Interrupt(s) initialization
                 ; 0000 0050 TIMSK=(0<<OCIE2) | (0<<TOIE2) | (0<<TICIE1) | (0<<OCIE1A) | (0<<OCIE1B) | (0<<TOIE1) | (0<<OCIE0) | (0<<TOIE0);
0000b2 bfe9      	OUT  0x39,R30
                 ; 0000 0051 
                 ; 0000 0052 // External Interrupt(s) initialization
                 ; 0000 0053 // INT0: Off
                 ; 0000 0054 // INT1: Off
                 ; 0000 0055 // INT2: Off
                 ; 0000 0056 MCUCR=(0<<ISC11) | (0<<ISC10) | (0<<ISC01) | (0<<ISC00);
0000b3 bfe5      	OUT  0x35,R30
                 ; 0000 0057 MCUCSR=(0<<ISC2);
0000b4 bfe4      	OUT  0x34,R30
                 ; 0000 0058 
                 ; 0000 0059 // USART initialization
                 ; 0000 005A // USART disabled
                 ; 0000 005B UCSRB=(0<<RXCIE) | (0<<TXCIE) | (0<<UDRIE) | (0<<RXEN) | (0<<TXEN) | (0<<UCSZ2) | (0<<RXB8) | (0<<TXB8);
0000b5 b9ea      	OUT  0xA,R30
                 ; 0000 005C 
                 ; 0000 005D // Analog Comparator initialization
                 ; 0000 005E // Analog Comparator: Off
                 ; 0000 005F // The Analog Comparator's positive input is
                 ; 0000 0060 // connected to the AIN0 pin
                 ; 0000 0061 // The Analog Comparator's negative input is
                 ; 0000 0062 // connected to the AIN1 pin
                 ; 0000 0063 ACSR=(1<<ACD) | (0<<ACBG) | (0<<ACO) | (0<<ACI) | (0<<ACIE) | (0<<ACIC) | (0<<ACIS1) | (0<<ACIS0);
0000b6 e8e0      	LDI  R30,LOW(128)
0000b7 b9e8      	OUT  0x8,R30
                 ; 0000 0064 SFIOR=(0<<ACME);
0000b8 e0e0      	LDI  R30,LOW(0)
0000b9 bfe0      	OUT  0x30,R30
                 ; 0000 0065 
                 ; 0000 0066 // ADC initialization
                 ; 0000 0067 // ADC disabled
                 ; 0000 0068 ADCSRA=(0<<ADEN) | (0<<ADSC) | (0<<ADATE) | (0<<ADIF) | (0<<ADIE) | (0<<ADPS2) | (0<<ADPS1) | (0<<ADPS0);
0000ba b9e6      	OUT  0x6,R30
                 ; 0000 0069 
                 ; 0000 006A // SPI initialization
                 ; 0000 006B // SPI disabled
                 ; 0000 006C SPCR=(0<<SPIE) | (0<<SPE) | (0<<DORD) | (0<<MSTR) | (0<<CPOL) | (0<<CPHA) | (0<<SPR1) | (0<<SPR0);
0000bb b9ed      	OUT  0xD,R30
                 ; 0000 006D 
                 ; 0000 006E // TWI initialization
                 ; 0000 006F // TWI disabled
                 ; 0000 0070 TWCR=(0<<TWEA) | (0<<TWSTA) | (0<<TWSTO) | (0<<TWEN) | (0<<TWIE);
0000bc bfe6      	OUT  0x36,R30
                 ; 0000 0071 
                 ; 0000 0072 // Alphanumeric LCD initialization
                 ; 0000 0073 // Connections are specified in the
                 ; 0000 0074 // Project|Configure|C Compiler|Libraries|Alphanumeric LCD menu:
                 ; 0000 0075 // RS - PORTC Bit 3
                 ; 0000 0076 // RD - PORTD Bit 7
                 ; 0000 0077 // EN - PORTD Bit 6
                 ; 0000 0078 // D4 - PORTB Bit 4
                 ; 0000 0079 // D5 - PORTB Bit 5
                 ; 0000 007A // D6 - PORTB Bit 6
                 ; 0000 007B // D7 - PORTB Bit 7
                 ; 0000 007C // Characters/line: 16
                 ; 0000 007D lcd_init(16);
0000bd e1a0      	LDI  R26,LOW(16)
0000be d0e9      	RCALL _lcd_init
                 ; 0000 007E lcd_gotoxy(1,1);
0000bf e0e1      	LDI  R30,LOW(1)
0000c0 93ea      	ST   -Y,R30
0000c1 e0a1      	LDI  R26,LOW(1)
0000c2 d093      	RCALL _lcd_gotoxy
                 ; 0000 007F lcd_putsf(" MILAD ");
                +
0000c3 e6a6     +LDI R26 , LOW ( 2 * _0x0 + ( 0 ) )
0000c4 e0b0     +LDI R27 , HIGH ( 2 * _0x0 + ( 0 ) )
                 	__POINTW2FN _0x0,0
0000c5 d0cf      	RCALL _lcd_putsf
                 ; 0000 0080 lcd_gotoxy(0,0);
0000c6 e0e0      	LDI  R30,LOW(0)
0000c7 93ea      	ST   -Y,R30
0000c8 e0a0      	LDI  R26,LOW(0)
0000c9 d08c      	RCALL _lcd_gotoxy
                 ; 0000 0081 while (1)
                 _0x3:
                 ; 0000 0082       {
                 ; 0000 0083       PORTA.4=0;
0000ca 98dc      	CBI  0x1B,4
                 ; 0000 0084       PORTA.5=1;
0000cb 9add      	SBI  0x1B,5
                 ; 0000 0085       PORTA.6=1;
0000cc 9ade      	SBI  0x1B,6
                 ; 0000 0086       PORTA.7=1;
0000cd 9adf      	SBI  0x1B,7
                 ; 0000 0087       if( PINA.2==0){delay_ms(300); lcd_puts("3");}
0000ce 99ca      	SBIC 0x19,2
0000cf c005      	RJMP _0xE
0000d0 940e 01d5 	CALL SUBOPT_0x0
                +
0000d2 e6a0     +LDI R26 , LOW ( _0xF + ( 0 ) )
0000d3 e0b1     +LDI R27 , HIGH ( _0xF + ( 0 ) )
                 	__POINTW2MN _0xF,0
0000d4 d0b1      	RCALL _lcd_puts
                 ; 0000 0088       if( PINA.1==0){delay_ms(300); lcd_puts("2");}
                 _0xE:
0000d5 99c9      	SBIC 0x19,1
0000d6 c005      	RJMP _0x10
0000d7 940e 01d5 	CALL SUBOPT_0x0
                +
0000d9 e6a2     +LDI R26 , LOW ( _0xF + ( 2 ) )
0000da e0b1     +LDI R27 , HIGH ( _0xF + ( 2 ) )
                 	__POINTW2MN _0xF,2
0000db d0aa      	RCALL _lcd_puts
                 ; 0000 0089       if( PINA.0==0){delay_ms(300); lcd_puts("1");}
                 _0x10:
0000dc 99c8      	SBIC 0x19,0
0000dd c005      	RJMP _0x11
0000de 940e 01d5 	CALL SUBOPT_0x0
                +
0000e0 e6a4     +LDI R26 , LOW ( _0xF + ( 4 ) )
0000e1 e0b1     +LDI R27 , HIGH ( _0xF + ( 4 ) )
                 	__POINTW2MN _0xF,4
0000e2 d0a3      	RCALL _lcd_puts
                 ; 0000 008A 
                 ; 0000 008B       PORTA.4=1;
                 _0x11:
0000e3 9adc      	SBI  0x1B,4
                 ; 0000 008C       PORTA.5=0;
0000e4 98dd      	CBI  0x1B,5
                 ; 0000 008D       PORTA.6=1;
0000e5 9ade      	SBI  0x1B,6
                 ; 0000 008E       PORTA.7=1;
0000e6 9adf      	SBI  0x1B,7
                 ; 0000 008F       if( PINA.2==0){delay_ms(300); lcd_puts("6");}
0000e7 99ca      	SBIC 0x19,2
0000e8 c005      	RJMP _0x1A
0000e9 940e 01d5 	CALL SUBOPT_0x0
                +
0000eb e6a6     +LDI R26 , LOW ( _0xF + ( 6 ) )
0000ec e0b1     +LDI R27 , HIGH ( _0xF + ( 6 ) )
                 	__POINTW2MN _0xF,6
0000ed d098      	RCALL _lcd_puts
                 ; 0000 0090       if( PINA.1==0){delay_ms(300); lcd_puts("5");}
                 _0x1A:
0000ee 99c9      	SBIC 0x19,1
0000ef c005      	RJMP _0x1B
0000f0 940e 01d5 	CALL SUBOPT_0x0
                +
0000f2 e6a8     +LDI R26 , LOW ( _0xF + ( 8 ) )
0000f3 e0b1     +LDI R27 , HIGH ( _0xF + ( 8 ) )
                 	__POINTW2MN _0xF,8
0000f4 d091      	RCALL _lcd_puts
                 ; 0000 0091       if( PINA.0==0){delay_ms(300); lcd_puts("4");}
                 _0x1B:
0000f5 99c8      	SBIC 0x19,0
0000f6 c005      	RJMP _0x1C
0000f7 940e 01d5 	CALL SUBOPT_0x0
                +
0000f9 e6aa     +LDI R26 , LOW ( _0xF + ( 10 ) )
0000fa e0b1     +LDI R27 , HIGH ( _0xF + ( 10 ) )
                 	__POINTW2MN _0xF,10
0000fb d08a      	RCALL _lcd_puts
                 ; 0000 0092 
                 ; 0000 0093 
                 ; 0000 0094       PORTA.4=1;
                 _0x1C:
0000fc 9adc      	SBI  0x1B,4
                 ; 0000 0095       PORTA.5=1;
0000fd 9add      	SBI  0x1B,5
                 ; 0000 0096       PORTA.6=1;
0000fe 9ade      	SBI  0x1B,6
                 ; 0000 0097       PORTA.7=0;
0000ff 98df      	CBI  0x1B,7
                 ; 0000 0098       delay_ms(3);
000100 940e 01d9 	CALL SUBOPT_0x1
                 ; 0000 0099       if( PINA.2==0){ PORTC.1=1; delay_ms(1000); PORTC.1=0; lcd_clear(); }
000102 99ca      	SBIC 0x19,2
000103 c007      	RJMP _0x25
000104 9aa9      	SBI  0x15,1
000105 eea8      	LDI  R26,LOW(1000)
000106 e0b3      	LDI  R27,HIGH(1000)
000107 940e 01e4 	CALL _delay_ms
000109 98a9      	CBI  0x15,1
00010a d058      	RCALL _lcd_clear
                 ; 0000 009A       if( PINA.1==0){delay_ms(300); lcd_puts("0");}
                 _0x25:
00010b 99c9      	SBIC 0x19,1
00010c c005      	RJMP _0x2A
00010d 940e 01d5 	CALL SUBOPT_0x0
                +
00010f e6ac     +LDI R26 , LOW ( _0xF + ( 12 ) )
000110 e0b1     +LDI R27 , HIGH ( _0xF + ( 12 ) )
                 	__POINTW2MN _0xF,12
000111 d074      	RCALL _lcd_puts
                 ; 0000 009B       if( PINA.0==0){delay_ms(300); lcd_puts("#");}
                 _0x2A:
000112 99c8      	SBIC 0x19,0
000113 c005      	RJMP _0x2B
000114 940e 01d5 	CALL SUBOPT_0x0
                +
000116 e6ae     +LDI R26 , LOW ( _0xF + ( 14 ) )
000117 e0b1     +LDI R27 , HIGH ( _0xF + ( 14 ) )
                 	__POINTW2MN _0xF,14
000118 d06d      	RCALL _lcd_puts
                 ; 0000 009C 
                 ; 0000 009D       PORTA.4=1;
                 _0x2B:
000119 9adc      	SBI  0x1B,4
                 ; 0000 009E       PORTA.5=1;
00011a 9add      	SBI  0x1B,5
                 ; 0000 009F       PORTA.6=0;
00011b 98de      	CBI  0x1B,6
                 ; 0000 00A0       PORTA.7=1;
00011c 9adf      	SBI  0x1B,7
                 ; 0000 00A1       delay_ms(3);
00011d 940e 01d9 	CALL SUBOPT_0x1
                 ; 0000 00A2       if( PINA.2==0){delay_ms(300); lcd_puts("9");}
00011f 99ca      	SBIC 0x19,2
000120 c005      	RJMP _0x34
000121 940e 01d5 	CALL SUBOPT_0x0
                +
000123 e7a0     +LDI R26 , LOW ( _0xF + ( 16 ) )
000124 e0b1     +LDI R27 , HIGH ( _0xF + ( 16 ) )
                 	__POINTW2MN _0xF,16
000125 d060      	RCALL _lcd_puts
                 ; 0000 00A3       if( PINA.1==0){delay_ms(300); lcd_puts("8");}
                 _0x34:
000126 99c9      	SBIC 0x19,1
000127 c005      	RJMP _0x35
000128 940e 01d5 	CALL SUBOPT_0x0
                +
00012a e7a2     +LDI R26 , LOW ( _0xF + ( 18 ) )
00012b e0b1     +LDI R27 , HIGH ( _0xF + ( 18 ) )
                 	__POINTW2MN _0xF,18
00012c d059      	RCALL _lcd_puts
                 ; 0000 00A4       if( PINA.0==0){delay_ms(300); lcd_puts("7");}
                 _0x35:
00012d 99c8      	SBIC 0x19,0
00012e c005      	RJMP _0x36
00012f 940e 01d5 	CALL SUBOPT_0x0
                +
000131 e7a4     +LDI R26 , LOW ( _0xF + ( 20 ) )
000132 e0b1     +LDI R27 , HIGH ( _0xF + ( 20 ) )
                 	__POINTW2MN _0xF,20
000133 d052      	RCALL _lcd_puts
                 ; 0000 00A5       }
                 _0x36:
000134 cf95      	RJMP _0x3
                 ; 0000 00A6 }
                 _0x37:
000135 cfff      	RJMP _0x37
                 ; .FEND
                 
                 	.DSEG
                 _0xF:
000160           	.BYTE 0x16
                 ;
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.DSEG
                 
                 	.CSEG
                 __lcd_write_nibble_G100:
                 ; .FSTART __lcd_write_nibble_G100
000136 93aa      	ST   -Y,R26
000137 b3e8      	IN   R30,0x18
000138 70ef      	ANDI R30,LOW(0xF)
000139 2fae      	MOV  R26,R30
00013a 81e8      	LD   R30,Y
00013b 7fe0      	ANDI R30,LOW(0xF0)
00013c 2bea      	OR   R30,R26
00013d bbe8      	OUT  0x18,R30
                +
00013e e082     +LDI R24 , LOW ( 2 )
                +__DELAY_USB_LOOP :
00013f 958a     +DEC R24
000140 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 2
000141 9a96      	SBI  0x12,6
                +
000142 e082     +LDI R24 , LOW ( 2 )
                +__DELAY_USB_LOOP :
000143 958a     +DEC R24
000144 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 2
000145 9896      	CBI  0x12,6
                +
000146 e082     +LDI R24 , LOW ( 2 )
                +__DELAY_USB_LOOP :
000147 958a     +DEC R24
000148 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 2
000149 c089      	RJMP _0x2080001
                 ; .FEND
                 __lcd_write_data:
                 ; .FSTART __lcd_write_data
00014a 93aa      	ST   -Y,R26
00014b 81a8      	LD   R26,Y
00014c dfe9      	RCALL __lcd_write_nibble_G100
00014d 81e8          ld    r30,y
00014e 95e2          swap  r30
00014f 83e8          st    y,r30
000150 81a8      	LD   R26,Y
000151 dfe4      	RCALL __lcd_write_nibble_G100
                +
000152 e181     +LDI R24 , LOW ( 17 )
                +__DELAY_USB_LOOP :
000153 958a     +DEC R24
000154 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 17
000155 c07d      	RJMP _0x2080001
                 ; .FEND
                 _lcd_gotoxy:
                 ; .FSTART _lcd_gotoxy
000156 93aa      	ST   -Y,R26
000157 81e8      	LD   R30,Y
000158 e0f0      	LDI  R31,0
000159 58ea      	SUBI R30,LOW(-__base_y_G100)
00015a 4ffe      	SBCI R31,HIGH(-__base_y_G100)
00015b 81e0      	LD   R30,Z
00015c 81a9      	LDD  R26,Y+1
00015d 0fae      	ADD  R26,R30
00015e dfeb      	RCALL __lcd_write_data
00015f 8059      	LDD  R5,Y+1
000160 8048      	LDD  R4,Y+0
000161 9622      	ADIW R28,2
000162 9508      	RET
                 ; .FEND
                 _lcd_clear:
                 ; .FSTART _lcd_clear
000163 e0a2      	LDI  R26,LOW(2)
000164 dfe5      	RCALL __lcd_write_data
000165 940e 01d9 	CALL SUBOPT_0x1
000167 e0ac      	LDI  R26,LOW(12)
000168 dfe1      	RCALL __lcd_write_data
000169 e0a1      	LDI  R26,LOW(1)
00016a dfdf      	RCALL __lcd_write_data
00016b 940e 01d9 	CALL SUBOPT_0x1
00016d e0e0      	LDI  R30,LOW(0)
00016e 2e4e      	MOV  R4,R30
00016f 2e5e      	MOV  R5,R30
000170 9508      	RET
                 ; .FEND
                 _lcd_putchar:
                 ; .FSTART _lcd_putchar
000171 93aa      	ST   -Y,R26
000172 81a8      	LD   R26,Y
000173 30aa      	CPI  R26,LOW(0xA)
000174 f011      	BREQ _0x2000005
000175 1457      	CP   R5,R7
000176 f048      	BRLO _0x2000004
                 _0x2000005:
000177 e0e0      	LDI  R30,LOW(0)
000178 93ea      	ST   -Y,R30
000179 9443      	INC  R4
00017a 2da4      	MOV  R26,R4
00017b dfda      	RCALL _lcd_gotoxy
00017c 81a8      	LD   R26,Y
00017d 30aa      	CPI  R26,LOW(0xA)
00017e f409      	BRNE _0x2000007
00017f c053      	RJMP _0x2080001
                 _0x2000007:
                 _0x2000004:
000180 9453      	INC  R5
000181 9aab      	SBI  0x15,3
000182 81a8      	LD   R26,Y
000183 dfc6      	RCALL __lcd_write_data
000184 98ab      	CBI  0x15,3
000185 c04d      	RJMP _0x2080001
                 ; .FEND
                 _lcd_puts:
                 ; .FSTART _lcd_puts
000186 93ba      	ST   -Y,R27
000187 93aa      	ST   -Y,R26
000188 931a      	ST   -Y,R17
                 _0x2000008:
000189 81a9      	LDD  R26,Y+1
00018a 81ba      	LDD  R27,Y+1+1
00018b 91ed      	LD   R30,X+
00018c 83a9      	STD  Y+1,R26
00018d 83ba      	STD  Y+1+1,R27
00018e 2f1e      	MOV  R17,R30
00018f 30e0      	CPI  R30,0
000190 f019      	BREQ _0x200000A
000191 2fa1      	MOV  R26,R17
000192 dfde      	RCALL _lcd_putchar
000193 cff5      	RJMP _0x2000008
                 _0x200000A:
000194 c010      	RJMP _0x2080002
                 ; .FEND
                 _lcd_putsf:
                 ; .FSTART _lcd_putsf
000195 93ba      	ST   -Y,R27
000196 93aa      	ST   -Y,R26
000197 931a      	ST   -Y,R17
                 _0x200000B:
000198 81e9      	LDD  R30,Y+1
000199 81fa      	LDD  R31,Y+1+1
00019a 9631      	ADIW R30,1
00019b 83e9      	STD  Y+1,R30
00019c 83fa      	STD  Y+1+1,R31
00019d 9731      	SBIW R30,1
00019e 91e4      	LPM  R30,Z
00019f 2f1e      	MOV  R17,R30
0001a0 30e0      	CPI  R30,0
0001a1 f019      	BREQ _0x200000D
0001a2 2fa1      	MOV  R26,R17
0001a3 dfcd      	RCALL _lcd_putchar
0001a4 cff3      	RJMP _0x200000B
                 _0x200000D:
                 _0x2080002:
0001a5 8118      	LDD  R17,Y+0
0001a6 9623      	ADIW R28,3
0001a7 9508      	RET
                 ; .FEND
                 _lcd_init:
                 ; .FSTART _lcd_init
0001a8 93aa      	ST   -Y,R26
0001a9 b3e7      	IN   R30,0x17
0001aa 6fe0      	ORI  R30,LOW(0xF0)
0001ab bbe7      	OUT  0x17,R30
0001ac 9a8e      	SBI  0x11,6
0001ad 9aa3      	SBI  0x14,3
0001ae 9a8f      	SBI  0x11,7
0001af 9896      	CBI  0x12,6
0001b0 98ab      	CBI  0x15,3
0001b1 9897      	CBI  0x12,7
0001b2 8078      	LDD  R7,Y+0
0001b3 81e8      	LD   R30,Y
0001b4 58e0      	SUBI R30,-LOW(128)
                +
0001b5 93e0 0178+STS __base_y_G100 + ( 2 ) , R30
                 	__PUTB1MN __base_y_G100,2
0001b7 81e8      	LD   R30,Y
0001b8 54e0      	SUBI R30,-LOW(192)
                +
0001b9 93e0 0179+STS __base_y_G100 + ( 3 ) , R30
                 	__PUTB1MN __base_y_G100,3
0001bb e1a4      	LDI  R26,LOW(20)
0001bc e0b0      	LDI  R27,0
0001bd 940e 01e4 	CALL _delay_ms
0001bf 940e 01dd 	CALL SUBOPT_0x2
0001c1 940e 01dd 	CALL SUBOPT_0x2
0001c3 940e 01dd 	CALL SUBOPT_0x2
0001c5 e2a0      	LDI  R26,LOW(32)
0001c6 df6f      	RCALL __lcd_write_nibble_G100
                +
0001c7 e281     +LDI R24 , LOW ( 33 )
                +__DELAY_USB_LOOP :
0001c8 958a     +DEC R24
0001c9 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 33
0001ca e2a8      	LDI  R26,LOW(40)
0001cb df7e      	RCALL __lcd_write_data
0001cc e0a4      	LDI  R26,LOW(4)
0001cd df7c      	RCALL __lcd_write_data
0001ce e8a5      	LDI  R26,LOW(133)
0001cf df7a      	RCALL __lcd_write_data
0001d0 e0a6      	LDI  R26,LOW(6)
0001d1 df78      	RCALL __lcd_write_data
0001d2 df90      	RCALL _lcd_clear
                 _0x2080001:
0001d3 9621      	ADIW R28,1
0001d4 9508      	RET
                 ; .FEND
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.CSEG
                 
                 	.CSEG
                 
                 	.CSEG
                 
                 	.DSEG
                 __base_y_G100:
000176           	.BYTE 0x4
                 
                 	.CSEG
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 11 TIMES, CODE SIZE REDUCTION:17 WORDS
                 SUBOPT_0x0:
0001d5 e2ac      	LDI  R26,LOW(300)
0001d6 e0b1      	LDI  R27,HIGH(300)
0001d7 940c 01e4 	JMP  _delay_ms
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x1:
0001d9 e0a3      	LDI  R26,LOW(3)
0001da e0b0      	LDI  R27,0
0001db 940c 01e4 	JMP  _delay_ms
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x2:
0001dd e3a0      	LDI  R26,LOW(48)
0001de 940e 0136 	CALL __lcd_write_nibble_G100
                +
0001e0 e281     +LDI R24 , LOW ( 33 )
                +__DELAY_USB_LOOP :
0001e1 958a     +DEC R24
0001e2 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 33
0001e3 9508      	RET
                 
                 
                 	.CSEG
                 _delay_ms:
0001e4 9610      	adiw r26,0
0001e5 f039      	breq __delay_ms1
                 __delay_ms0:
0001e6 95a8      	wdr
                +
0001e7 ef8a     +LDI R24 , LOW ( 0xFA )
0001e8 e090     +LDI R25 , HIGH ( 0xFA )
                +__DELAY_USW_LOOP :
0001e9 9701     +SBIW R24 , 1
0001ea f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 0xFA
0001eb 9711      	sbiw r26,1
0001ec f7c9      	brne __delay_ms0
                 __delay_ms1:
0001ed 9508      	ret
                 
                 ;END OF CODE MARKER
                 __END_OF_CODE:


RESOURCE USE INFORMATION
------------------------

Notice:
The register and instruction counts are symbol table hit counts,
and hence implicitly used resources are not counted, eg, the
'lpm' instruction without operands implicitly uses r0 and z,
none of which are counted.

x,y,z are separate entities in the symbol table and are
counted separately from r26..r31 here.

.dseg memory usage only counts static data declared with .byte

ATmega16A register use summary:
r0 :   4 r1 :   1 r2 :   0 r3 :   0 r4 :   4 r5 :   4 r6 :   0 r7 :   2 
r8 :   0 r9 :   0 r10:   0 r11:   0 r12:   0 r13:   0 r14:   0 r15:   0 
r16:   0 r17:   7 r18:   0 r19:   0 r20:   0 r21:   0 r22:   2 r23:   0 
r24:  21 r25:   3 r26:  56 r27:  22 r28:   4 r29:   1 r30:  96 r31:   7 
x  :   4 y  :  38 z  :   9 
Registers used: 18 out of 35 (51.4%)

ATmega16A instruction use summary:
.lds  :   0 .lds.l:   0 .sts  :   0 .sts.l:   0 adc   :   0 add   :   1 
adiw  :   5 and   :   0 andi  :   2 asr   :   0 bclr  :   0 bld   :   0 
brbc  :   0 brbs  :   0 brcc  :   0 brcs  :   0 break :   0 breq  :   5 
brge  :   0 brhc  :   0 brhs  :   0 brid  :   0 brie  :   0 brlo  :   1 
brlt  :   0 brmi  :   0 brne  :  12 brpl  :   0 brsh  :   0 brtc  :   0 
brts  :   0 brvc  :   0 brvs  :   0 bset  :   0 bst   :   0 call  :  21 
cbi   :  10 cbr   :   0 clc   :   0 clh   :   0 cli   :   1 cln   :   0 
clr   :   2 cls   :   0 clt   :   0 clv   :   0 clz   :   0 com   :   0 
cp    :   1 cpc   :   0 cpi   :   4 cpse  :   0 dec   :   7 des   :   0 
eor   :   0 fmul  :   0 fmuls :   0 fmulsu:   0 icall :   0 ijmp  :   0 
in    :   2 inc   :   2 jmp   :  24 ld    :  12 ldd   :   9 ldi   :  75 
lds   :   0 lpm   :   9 lsl   :   0 lsr   :   0 mov   :   8 movw  :   3 
mul   :   0 muls  :   0 mulsu :   0 neg   :   0 nop   :   0 or    :   1 
ori   :   1 out   :  42 pop   :   0 push  :   0 rcall :  32 ret   :   6 
reti  :   0 rjmp  :  22 rol   :   0 ror   :   0 sbc   :   0 sbci  :   1 
sbi   :  18 sbic  :  12 sbis  :   0 sbiw  :   6 sbr   :   0 sbrc  :   0 
sbrs  :   0 sec   :   0 seh   :   0 sei   :   0 sen   :   0 ser   :   0 
ses   :   0 set   :   0 sev   :   0 sez   :   0 sleep :   0 spm   :   0 
st    :  18 std   :   4 sts   :   2 sub   :   0 subi  :   3 swap  :   1 
tst   :   0 wdr   :   1 
Instructions used: 38 out of 116 (32.8%)

ATmega16A memory use summary [bytes]:
Segment   Begin    End      Code   Data   Used    Size   Use%
---------------------------------------------------------------
[.cseg] 0x000000 0x0003dc    864    124    988   16384   6.0%
[.dseg] 0x000060 0x00017a      0     26     26    1024   2.5%
[.eseg] 0x000000 0x000000      0      0      0     512   0.0%

Assembly complete, 0 errors, 3 warnings
